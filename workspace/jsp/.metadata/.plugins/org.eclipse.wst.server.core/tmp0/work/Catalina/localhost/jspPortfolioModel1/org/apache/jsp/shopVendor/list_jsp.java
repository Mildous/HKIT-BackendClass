/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-05 05:55:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shopVendor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import config.Util;
import vendor.model.dao.VendorDAO;
import vendor.model.dto.VendorDTO;
import java.net.Inet4Address;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/shopVendor/_inc_top.jsp", Long.valueOf(1661913709609L));
    _jspx_dependants.put("/shopVendor/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
    _jspx_dependants.put("/shopVendor/../_include/inc_header.jsp", Long.valueOf(1662350101525L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vendor.model.dao.VendorDAO");
    _jspx_imports_classes.add("config.Util");
    _jspx_imports_classes.add("java.net.Inet4Address");
    _jspx_imports_classes.add("vendor.model.dto.VendorDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String referer = request.getHeader("REFERER");
	String url = request.getRequestURL().toString();
	String uri = request.getRequestURI().toString();
	String path = request.getContextPath();
	String ip = Inet4Address.getLocalHost().getHostAddress();	// import java.net.Inet4Address;
/*	
	out.println("referer : " + referer + "<br>");
	out.println("url : " + url + "<br>");
	out.println("uri : " + uri + "<br>");
	out.println("ip : " + ip + "<br>");
*/	

	String menuGubun = request.getParameter("menuGubun");

	if(menuGubun == null || menuGubun.trim().equals("")) {
		menuGubun = "member_list";

/*		out.println("<script>");
		out.println("location.href='error.jsp?errorCode=001';");
		out.println("</script>");
*/
		return;
	}
	
	String[] imsiMenuGubunArray = menuGubun.split("_");
	String folderName = imsiMenuGubunArray[0];
	String fileName = imsiMenuGubunArray[1];
	String includePage = "../" + folderName + "/" + fileName + ".jsp";
	//System.out.println("--> " + folderName + " / " + fileName + " / " + includePage + "<br>");
	
	
	String imgDisplayPath = "";
	imgDisplayPath += request.getContextPath();
	imgDisplayPath += "/attach";
	imgDisplayPath += request.getContextPath();
		

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write("\r\n");
      out.write("\r\n");

	VendorDAO dao = null;
	VendorDTO dto = null;
	int vendorCode = 0;
	if( fileName.equals("regi") || fileName.equals("regiProc") || fileName.equals("edit") || fileName.equals("editProc") || fileName.equals("drop") || fileName.equals("dropProc")) {
		String vendorCode_ = request.getParameter("vendorCode");
		if(vendorCode_ == null || vendorCode_.trim().equals("")) {
			vendorCode_ = "0";
		}
		vendorCode = Integer.parseInt(vendorCode_);
		
		VendorDTO arguDto = new VendorDTO();
		arguDto.setVendorCode(vendorCode);
			
		dao = new VendorDAO();	
		dto = dao.getSelectOne(arguDto);
	}
		

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	// 검색
	String searchField = request.getParameter("searchField");
	String searchWord = request.getParameter("searchWord");
	
	Util util = new Util();
	searchField = util.getNullBlankCheck(searchField, "");
	searchWord = util.getNullBlankCheck(searchWord, "");
	
	if(searchField == null || searchField.trim().equals("")) {
		searchField = "";
	}
	
	if(searchWord == null || searchWord.trim().equals("")) {
		searchWord = "";
	}
	
	dao = new VendorDAO();
	
	// ---------------- 페이징 처리 ----------------
	String pageNumber_ = request.getParameter("pageNumber");
	if(pageNumber_ == null || pageNumber_.trim().equals("")) {
		pageNumber_ = "1";
	}
	int pageNumber = Integer.parseInt(pageNumber_);
	
	int totalRecord = dao.getTotalRecord(searchField, searchWord);
	int pageSize = 10;	// 한 페이지에 나타낼 레코드 개수
	int blockSize = 10;	// 출력할 블럭의 개수
	
	int block = (pageNumber - 1) / pageSize;
	int jj = totalRecord - pageSize * (pageNumber - 1);	//단지 화면에 보여질 일련번호..
	
	double totalPageDou = Math.ceil(totalRecord / (double)pageSize);
	int totalPage = (int)totalPageDou;
	
	int startRecord = pageSize * (pageNumber - 1) + 1;
	int lastRecord = pageSize * pageNumber;
	
	ArrayList<VendorDTO> list = dao.getSelectAll(searchField, searchWord, startRecord, lastRecord);
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>제조사 목록</h2>\r\n");
      out.write("<div style=\"padding: 0px 0px; width: 50%;\" align=\"left\">\r\n");
	if(searchField.equals("") || searchWord.equals("")) { 
      out.write("\r\n");
      out.write("	* 전체목록 (");
      out.print( totalRecord );
      out.write("건)\r\n");
	} else { 
      out.write("\r\n");
      out.write("	* 검색어 \"");
      out.print( searchWord );
      out.write("\"으/로 검색된 목록 (");
      out.print( totalRecord );
      out.write("건)\r\n");
	} 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<table border=\"1\" width=\"50%\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>순번</th>\r\n");
      out.write("		<th>제조사명</th>\r\n");
      out.write("		<th>등록일</th>\r\n");
      out.write("		<th>비고</th>\r\n");
      out.write("	</tr>\r\n");
 if(totalRecord == 0) { 
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"8\" height=\"150px\" align=\"center\">등록된 제조사가 없습니다..</td>\r\n");
      out.write("	</tr>\r\n");
 } 
      out.write('\r');
      out.write('\n');

	for(int i=0; i<list.size(); i++) {
		VendorDTO indexDto = list.get(i);

      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\">");
      out.print( totalRecord );
      out.write("</td>\r\n");
      out.write("		<td>");
      out.print( indexDto.getVendorName() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( indexDto.getRegiDate() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">\r\n");
      out.write("			<a href=\"#\" onClick=\"move('shopVendor_edit', '");
      out.print( indexDto.getVendorCode() );
      out.write("', '', '');\">[수정]</a>\r\n");
      out.write("			&nbsp;\r\n");
      out.write("			<a href=\"#\" onClick=\"move('shopVendor_drop', '");
      out.print( indexDto.getVendorCode() );
      out.write("', '', '');\">[삭제]</a>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");

		totalRecord--;
	}

      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"8\" align=\"center\" style=\"padding: 20px 0px;\">\r\n");
      out.write("		<form name=\"searchForm\" method=\"post\" action=\"main.jsp?menuGubun=shopVendor_list\">\r\n");
      out.write("			<select name=\"searchField\">\r\n");
      out.write("				<option value=\"\">-- 선택 --</option>\r\n");
      out.write("				<option value=\"vendorName\" ");
 if(searchField.equals("vendorName")) { out.println("selected"); } 
      out.write(">제조사명</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<input type=\"text\" name=\"searchWord\" value=\"");
      out.print( searchWord );
      out.write("\">\r\n");
      out.write("			<button type=\"button\" onClick=\"submit()\">검색</button>\r\n");
      out.write("		</form> \r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 50%;\" align=\"center\">\r\n");

	int totalBlock = totalPage / blockSize;
	double value1 = (double)totalBlock;
	double value2 = totalPage / blockSize;
	if(value1 - value2 == 0) {
		totalBlock = totalBlock - 1;
	}

      out.write("\r\n");
      out.write("<a href=\"#\" onClick=\"goPage('");
      out.print( menuGubun );
      out.write("', '1', '");
      out.print( searchField );
      out.write("', '");
      out.print( searchWord );
      out.write("');\">[첫페이지]</a>\r\n");
      out.write("&nbsp;&nbsp;\r\n");
	if(block > 0) { 
		int imsiPage = (block-1) * blockSize + 10;

      out.write("\r\n");
      out.write("	<a href=\"#\" onClick=\"goPage('");
      out.print( menuGubun );
      out.write("', '");
      out.print( imsiPage );
      out.write("', '");
      out.print( searchField );
      out.write("', '");
      out.print( searchWord );
      out.write("');\">[이전10개]</a>\r\n");
	} else { 
      out.write("\r\n");
      out.write("	[이전10개]\r\n");
	} 
      out.write("\r\n");
      out.write("&nbsp;&nbsp;\r\n");

	for(int goPage=1; goPage<=blockSize; goPage++) {
		int imsiValue = block * blockSize + goPage;
		if(totalPage - imsiValue >= 0) {
			if(imsiValue == pageNumber) {

      out.write("\r\n");
      out.write("				");
      out.print( imsiValue );
      out.write('\r');
      out.write('\n');
			} else { 
      out.write("\r\n");
      out.write("				<a href=\"#\" onClick=\"goPage('");
      out.print( menuGubun );
      out.write("', '");
      out.print( imsiValue );
      out.write("', '");
      out.print( searchField );
      out.write("', '");
      out.print( searchWord );
      out.write("');\">");
      out.print( imsiValue );
      out.write("</a>\r\n");

			}
			out.println("&nbsp;");
		}
	}
	if(block-totalBlock <= 0) {
		int yyy = (block + 1) * blockSize + 1;
		//int zzz = block + 1;

      out.write("\r\n");
      out.write("		<a href=\"#\" onClick=\"goPage('");
      out.print( menuGubun );
      out.write("', '");
      out.print( yyy );
      out.write("', '");
      out.print( searchField );
      out.write("', '");
      out.print( searchWord );
      out.write("');\">[다음10개]</a>\r\n");
	} else { 
      out.write("\r\n");
      out.write("		[다음10개]\r\n");
	} 
      out.write("\r\n");
      out.write("&nbsp;\r\n");
      out.write("<a href=\"#\" onClick=\"goPage('");
      out.print( menuGubun );
      out.write("', '");
      out.print( totalPage );
      out.write("', '");
      out.print( searchField );
      out.write("', '");
      out.print( searchWord );
      out.write("');\">[끝페이지]</a>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 50%;\" align=\"right\">\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('shopVendor_list', '', '', '');\">목록</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('shopVendor_regi', '', '', '');\">등록</a>\r\n");
      out.write("	|\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function move(value1, value2, searchField, searchWord) {\r\n");
      out.write("	var linkAddr = 'main.jsp?menuGubun=' + value1 + '&vendorCode=' + value2 + '&searchField=' + searchField + '&searchWord=' + searchWord;\r\n");
      out.write("	location.href = linkAddr;\r\n");
      out.write("}\r\n");
      out.write("function goPage(value1, value2, value3, value4) {\r\n");
      out.write("	location.href='main.jsp?menuGubun=' + value1 + '&pageNumber=' + value2 + '&searchField=' + value3 + '&searchWord=' + value4 ;\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

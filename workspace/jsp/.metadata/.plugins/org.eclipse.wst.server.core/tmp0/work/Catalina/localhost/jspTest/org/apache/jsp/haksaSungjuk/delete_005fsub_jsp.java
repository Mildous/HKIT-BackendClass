/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-17 06:55:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.haksaSungjuk;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import haksaSungjuk.model.dto.HaksaSungjukDTO;
import haksaSungjuk.model.dao.HaksaSungjukDAO;
import java.util.ArrayList;

public final class delete_005fsub_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("haksaSungjuk.model.dto.HaksaSungjukDTO");
    _jspx_imports_classes.add("haksaSungjuk.model.dao.HaksaSungjukDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String sungjukNo_ = request.getParameter("sungjukNo");
	int sungjukNo = Integer.parseInt(sungjukNo_);
	
	HaksaSungjukDTO arguDto = new HaksaSungjukDTO();
	arguDto.setSungjukNo(sungjukNo);
	
	HaksaSungjukDAO dao = new HaksaSungjukDAO();
	HaksaSungjukDTO resultDto = dao.getSelectOne(arguDto);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>성적삭제</h2>\r\n");
      out.write("<form name=\"DirForm\">\r\n");
      out.write("<input type=\"hidden\" name=\"sungjukNo\" id=\"sungjukNo\" value=\"");
      out.print( resultDto.getSungjukNo() );
      out.write("\">\r\n");
      out.write("<table border=\"1\" width=\"50%\" align=\"center\">\r\n");
      out.write("	<tr>		\r\n");
      out.write("		<th colspan=\"2\">이름</th>\r\n");
      out.write("		<td colspan=\"3\" align=\"center\">");
      out.print( resultDto.getName() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th colspan=\"2\">시험명</th>\r\n");
      out.write("		<td colspan=\"3\" align=\"center\">");
      out.print( resultDto.getSihumName() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"background: lightgray;\">\r\n");
      out.write("		<th>국어</th>\r\n");
      out.write("		<th>영어</th>\r\n");
      out.write("		<th>수학</th>\r\n");
      out.write("		<th>과학</th>\r\n");
      out.write("		<th>역사</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getKor() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getEng() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getMat() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getSci() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getHis() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr style=\"background: lightgray;\">\r\n");
      out.write("		<th>총점</th>\r\n");
      out.write("		<th>평균</th>\r\n");
      out.write("		<th colspan=\"3\">등급</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getTot() );
      out.write("</td>\r\n");
      out.write("		<td align=\"center\">");
      out.print( resultDto.getAvg() );
      out.write("</td>\r\n");
      out.write("		");
 if(resultDto.getAvg() >= 80) { 
      out.write("\r\n");
      out.write("		<td colspan=\"3\" align=\"center\" style=\"background: lightblue; font-weight: bold; color: blue;\">");
      out.print( resultDto.getGrade() );
      out.write("</td>\r\n");
      out.write("		");
 } else { 
      out.write("\r\n");
      out.write("		<td colspan=\"3\" align=\"center\" style=\"background: yellow; font-weight: bold; color: red;\">");
      out.print( resultDto.getGrade() );
      out.write("</td>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"5\" align=\"center\">\r\n");
      out.write("			<button type=\"button\" onClick=\"formSubmit();\">삭제하기</button>\r\n");
      out.write("			<button type=\"button\" onClick=\"location.href='list.jsp';\">목록으로</button>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function formSubmit() {\r\n");
      out.write("	if(confirm('정말 삭제하시겠습니까?')) {\r\n");
      out.write("		document.DirForm.action = \"deleteProc.jsp\";\r\n");
      out.write("		document.DirForm.method = \"post\";\r\n");
      out.write("		document.DirForm.submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

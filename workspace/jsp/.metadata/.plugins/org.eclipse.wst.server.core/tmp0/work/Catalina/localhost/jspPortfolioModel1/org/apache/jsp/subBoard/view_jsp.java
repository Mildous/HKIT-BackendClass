/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-13 03:48:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.subBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import subBoard.model.dao.SubBoardDAO;
import subBoard.model.dto.SubBoardDTO;
import java.util.ArrayList;
import java.net.Inet4Address;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/subBoard/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
    _jspx_dependants.put("/subBoard/_inc_top.jsp", Long.valueOf(1663040545931L));
    _jspx_dependants.put("/subBoard/../_include/inc_header.jsp", Long.valueOf(1662616070258L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("subBoard.model.dto.SubBoardDTO");
    _jspx_imports_classes.add("subBoard.model.dao.SubBoardDAO");
    _jspx_imports_classes.add("java.net.Inet4Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String referer = request.getHeader("REFERER");
	String url = request.getRequestURL().toString();
	String uri = request.getRequestURI().toString();
	String path = request.getContextPath();
	String ip = Inet4Address.getLocalHost().getHostAddress();	// import java.net.Inet4Address;
/*	
	out.println("referer : " + referer + "<br>");
	out.println("url : " + url + "<br>");
	out.println("uri : " + uri + "<br>");
	out.println("ip : " + ip + "<br>");
*/	

	String menuGubun = request.getParameter("menuGubun");

	if(menuGubun == null || menuGubun.trim().equals("")) {
		menuGubun = "member_list";

/*		out.println("<script>");
		out.println("location.href='error.jsp?errorCode=001';");
		out.println("</script>");
		return;
*/

	}
	
	String[] imsiMenuGubunArray = menuGubun.split("_");
	String folderName = imsiMenuGubunArray[0];
	String fileName = imsiMenuGubunArray[1];
	String includePage = "../" + folderName + "/" + fileName + ".jsp";
	//System.out.println("--> " + folderName + " / " + fileName + " / " + includePage + "<br>");
	
	
	String imgDisplayPath = "";
	imgDisplayPath += request.getContextPath();
	imgDisplayPath += "/attach";
	imgDisplayPath += request.getContextPath();
		

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write("\r\n");
      out.write("\r\n");

	String tbl = request.getParameter("tbl");
	if(tbl == null || tbl.trim().equals("")) {
		tbl = "freeboard";
	}
	
	String imsiBoardTitle = "";
	if(tbl.equals("freeboard")) {
		imsiBoardTitle = "자유게시판";
	} else if(tbl.equals("onebyone")) {
		imsiBoardTitle = "1:1게시판";
	} else if(tbl.equals("qna")) {
		imsiBoardTitle = "Q&A 게시판";
	} else {
		out.println("<script>");
		out.println("alert('없는 게시판입니다.\\Home으로 이동합니다.');");
		out.println("location.href='main.jsp?menuGubun=dashBoard_list';");
		out.println("</script>");
	}

	String pageNum_ = request.getParameter("pageNum");
	if(pageNum_ == null || pageNum_.trim().equals("")) {
		pageNum_ = "1";
	}
	int pageNum = Integer.parseInt(pageNum_);

	String no_ = request.getParameter("no");
	
	if(no_ == null || no_.trim().equals("")) {
		no_ = "0";
	}
	
	int no = Integer.parseInt(no_);

	String searchField = request.getParameter("searchField");
	String searchWord = request.getParameter("searchWord");
	
	// 하나라도 비어있으면 검색X
	int imsiSearchCounter = 0;
	if(searchField == null || searchField.trim().equals("")) {
		searchField = "";
		imsiSearchCounter++;
	}
	if(searchWord == null || searchWord.trim().equals("")) {
		searchWord = "";
		imsiSearchCounter++;
	}
	if(imsiSearchCounter > 0) {
		searchField = "";
		searchWord = "";
	}

      out.write("\r\n");
      out.write("\r\n");
	
	String viewPasswd = request.getParameter("viewPasswd");
	if(viewPasswd == null || viewPasswd.trim().equals("")) {
		viewPasswd = "";
	}
	
	SubBoardDTO arguDto = new SubBoardDTO();
	arguDto.setNo(no);
	arguDto.setField(searchField);
	arguDto.setWord(searchWord);
	arguDto.setTbl(tbl);
	
	SubBoardDAO dao = new SubBoardDAO();
	dao.setUpdateHit(arguDto);
	SubBoardDTO dto = dao.getSelectOne(arguDto);
	
	if(dto.getNo() <= 0) {
		return;
	}
	
	String imsiPage = "viewPage";
	if(dto.getSecretGubun().equals("T")) {
		if(!dto.getPasswd().equals(viewPasswd)) {
			imsiPage = "viewPasswdPage";
		}
	}
	

      out.write('\r');
      out.write('\n');
	if(imsiPage.equals("viewPasswdPage")) {	
      out.write("\r\n");
      out.write("	<form name=\"passwdForm\">\r\n");
      out.write("	<input type=\"hidden\" name=\"no\" value=\"");
      out.print( no );
      out.write("\">\r\n");
      out.write("	<input type=\"hidden\" name=\"searchField\" value=\"");
      out.print( searchField );
      out.write("\">\r\n");
      out.write("	<input type=\"hidden\" name=\"searchWord\" value=\"");
      out.print( searchWord );
      out.write("\">\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\" align=\"center\" >\r\n");
      out.write("				<h2>비밀글입니다</h2>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\">\r\n");
      out.write("				비밀번호 : &nbsp;\r\n");
      out.write("				<input type=\"password\" name=\"viewPasswd\" id=\"view_passwd\">\r\n");
      out.write("				<button type=\"button\" onclick=\"passwdSubmit();\">확인</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	<script>\r\n");
      out.write("		function passwdSubmit() {\r\n");
      out.write("			passwdForm.action = \"main.jsp?menuGubun=subBoard_view\";\r\n");
      out.write("			passwdForm.method = \"post\";\r\n");
      out.write("			passwdForm.submit();\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
	} else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>");
      out.print( imsiBoardTitle );
      out.write(" 게시글 상세보기</h2>\r\n");
      out.write("<table border=\"1\" align=\"center\" width=\"80%\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>번호</th>\r\n");
      out.write("		<td>");
      out.print( dto.getNum() );
      out.write("</td>\r\n");
      out.write("		<th>조회수</th>\r\n");
      out.write("		<td>");
      out.print( dto.getHit() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>작성자</th>\r\n");
      out.write("		<td>");
      out.print( dto.getWriter() );
      out.write("</td>\r\n");
      out.write("		<th>이메일</th>\r\n");
      out.write("		<td>");
      out.print( dto.getEmail() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>제목</th>\r\n");
      out.write("		<td>");
      out.print( dto.getSubject() );
      out.write("</td>	\r\n");
      out.write("		<th>작성일</th>\r\n");
      out.write("		<td>");
      out.print( dto.getRegiDate() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>ip</th>\r\n");
      out.write("		<td colspan=\"3\">");
      out.print( dto.getIp() );
      out.write("</td>	\r\n");
      out.write("	</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("		<th>공지글</th>\r\n");
      out.write("		<td>");
      out.print( dto.getNoticeNo() );
      out.write("</td>	\r\n");
      out.write("		<th>비밀글</th>\r\n");
      out.write("		<td>");
      out.print( dto.getSecretGubun() );
      out.write("</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>첨부</th>\r\n");
      out.write("		<td colspan=\"3\">");
      out.print( dto.getAttachInfo());
      out.write("</td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>내용</th>\r\n");
      out.write("		<td colspan=\"3\" height=\"100\">\r\n");
      out.write("			");
      out.print( dto.getContent().replace("\n", "<br>") );
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 80%; \" align=\"right\">\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('subBoard_insert', '");
      out.print( tbl );
      out.write("', '");
      out.print( no );
      out.write("');\">답변글달기</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('subBoard_list', '");
      out.print( tbl );
      out.write("', '');\">목록</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('subBoard_write', '");
      out.print( tbl );
      out.write("');\">등록</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('subBoard_update', '");
      out.print( tbl );
      out.write("', '");
      out.print( dto.getNo() );
      out.write("');\">수정</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('subBoard_delete', '");
      out.print( tbl );
      out.write("', '");
      out.print( dto.getNo() );
      out.write("');\">삭제</a>\r\n");
      out.write("	|\r\n");
      out.write("</div>\r\n");
	} 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function move(value1, value2, value3) {\r\n");
      out.write("	location.href='main.jsp?menuGubun=' + value1 + \"&tbl=\" + value2 + '&no=' + value3 + '&searchField=");
      out.print( searchField );
      out.write("&searchWord=");
      out.print( searchWord );
      out.write("';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 80%; \" align=\"left\">\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("		<td width=\"100px\">이전글</td>\r\n");
      out.write("	");

		if((Object)dto.getPreNo() == null || dto.getPreNo() == 0) {
			out.println("<td>이전글이 없습니다..</td>");
		} else {
	
      out.write("\r\n");
      out.write("			<td><a href=\"#\" onClick=\"move('subBoard_view', '");
      out.print( dto.getTbl() );
      out.write("', '");
      out.print( dto.getPreNo() );
      out.write("');\">");
      out.print( dto.getPreSubject() );
      out.write("</a></td>\r\n");
      out.write("	");
		
		}
	
      out.write("	\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("		<td width=\"100px\">다음글</td>\r\n");
      out.write("	");

		if((Object)dto.getNxtNo() == null || dto.getNxtNo() == 0) {
			out.println("<td>다음글이 없습니다..</td>");
		} else {
	
      out.write("\r\n");
      out.write("			<td><a href=\"#\" onClick=\"move('subBoard_view', '");
      out.print( dto.getTbl() );
      out.write("', '");
      out.print( dto.getNxtNo() );
      out.write("');\">");
      out.print( dto.getNxtSubject() );
      out.write("</a></td>\r\n");
      out.write("	");
		
		}
	
      out.write("	\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
	if(imsiPage.equals("viewPage")) { 
      out.write("\r\n");
      out.write("	<a name=\"comment\"></a>\r\n");
      out.write("	<div id=\"commentResult\" style=\"margin: 20px 0px 20px 0px; width: 80%; \" align=\"center\"></div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		commentList();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function commentList() {\r\n");
      out.write("		var param = {\r\n");
      out.write("				\"no\" : ");
      out.print( no );
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		var url = \"../subBoard/commentList.jsp\";\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data: param,\r\n");
      out.write("			url: url,\r\n");
      out.write("			success: function(data) {\r\n");
      out.write("				$(\"#commentResult\").html(data);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

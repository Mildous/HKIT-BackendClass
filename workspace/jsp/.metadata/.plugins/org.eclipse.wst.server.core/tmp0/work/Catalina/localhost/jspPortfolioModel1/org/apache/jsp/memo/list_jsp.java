/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-22 06:17:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.memo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import memo.model.dto.MemoDTO;
import memo.model.dao.MemoDAO;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("memo.model.dto.MemoDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("memo.model.dao.MemoDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");

    MemoDAO dao = new MemoDAO();
	ArrayList<MemoDTO> list = dao.getSelectAll();
	int totalCount = list.size();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>메모장</h2>\r\n");
      out.write("\r\n");
      out.write("<fieldset style=\"border: 0px solid blue; margin: 10px 0px 20px 0px; width: 80%\">\r\n");
      out.write("	<form name=\"insertForm\">\r\n");
      out.write("	<table border=\"0\" align=\"left\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>작성자</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"writer\" id=\"writer\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>내용</td>\r\n");
      out.write("			<td><textarea rows=\"5\" cols=\"50\" name=\"content\" id=\"content\"></textarea></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<button type=\"button\" onClick=\"save();\" id=\"btnSave\">저장</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	function save() {\r\n");
      out.write("		if(confirm('등록할까요?')) {\r\n");
      out.write("			document.insertForm.action = \"mainProc.jsp?menuGubun=memo_insertProc\";\r\n");
      out.write("			document.insertForm.method = \"post\";\r\n");
      out.write("			document.insertForm.submit();\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<table border=\"1\" width=\"80%\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>순번</th>\r\n");
      out.write("		<th>내용</th>\r\n");
      out.write("		<th>작성자</th>\r\n");
      out.write("		<th>등록일</th>\r\n");
      out.write("		<th>비고</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");

		if(totalCount == 0) {
	
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"4\" height=\"200px\" align=\"center\">등록된 내용이 없습니다..</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");
	} 
      out.write('\r');
      out.write('\n');
      out.write('	');

		int num = totalCount;
		for(int i=0; i<list.size(); i++) {
			MemoDTO dto = list.get(i);
	
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>");
      out.print( num );
      out.write("</td>\r\n");
      out.write("		<td><a href=\"#\" onClick=\"move('memo_view', '");
      out.print( dto.getNo() );
      out.write("');\">");
      out.print( dto.getContent() );
      out.write("</a></td>\r\n");
      out.write("		<td>");
      out.print( dto.getWriter() );
      out.write("</td>\r\n");
      out.write("		<td>");
      out.print( dto.getRegiDate() );
      out.write("</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href=\"#\" onClick=\"suntaek('");
      out.print( dto.getNo() );
      out.write("', '");
      out.print( dto.getWriter() );
      out.write("', '");
      out.print( dto.getContent() );
      out.write("');\">[수정]</a>\r\n");
      out.write("			<a href=\"#\" onClick=\"suntaek('");
      out.print( dto.getNo() );
      out.write("', '");
      out.print( dto.getWriter() );
      out.write("', '");
      out.print( dto.getContent() );
      out.write("');\">[삭제]</a>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");
		
			num--;
		}
	
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 80%; \" align=\"right\">\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('memo_list', '');\">목록</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('memo_insert', '');\">등록</a>\r\n");
      out.write("	|\r\n");
      out.write("</div>   \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function move(value1, value2) {\r\n");
      out.write("	location.href='main.jsp?menuGubun=' + value1 + '&no=' + value2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function suntaek(value1, value2, value3) {\r\n");
      out.write("	$(\"#writer\").val(value2);\r\n");
      out.write("	$(\"#content\").val(value3);\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

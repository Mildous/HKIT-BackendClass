/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-13 04:18:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.subBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import subBoard.model.dao.SubBoardDAO;
import subBoard.model.dto.SubBoardDTO;
import java.util.ArrayList;
import java.net.Inet4Address;

public final class updateProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/subBoard/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
    _jspx_dependants.put("/subBoard/_inc_top.jsp", Long.valueOf(1663040545931L));
    _jspx_dependants.put("/subBoard/../_include/inc_header.jsp", Long.valueOf(1662616070258L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("subBoard.model.dto.SubBoardDTO");
    _jspx_imports_classes.add("subBoard.model.dao.SubBoardDAO");
    _jspx_imports_classes.add("java.net.Inet4Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String referer = request.getHeader("REFERER");
	String url = request.getRequestURL().toString();
	String uri = request.getRequestURI().toString();
	String path = request.getContextPath();
	String ip = Inet4Address.getLocalHost().getHostAddress();	// import java.net.Inet4Address;
/*	
	out.println("referer : " + referer + "<br>");
	out.println("url : " + url + "<br>");
	out.println("uri : " + uri + "<br>");
	out.println("ip : " + ip + "<br>");
*/	

	String menuGubun = request.getParameter("menuGubun");

	if(menuGubun == null || menuGubun.trim().equals("")) {
		menuGubun = "member_list";

/*		out.println("<script>");
		out.println("location.href='error.jsp?errorCode=001';");
		out.println("</script>");
		return;
*/

	}
	
	String[] imsiMenuGubunArray = menuGubun.split("_");
	String folderName = imsiMenuGubunArray[0];
	String fileName = imsiMenuGubunArray[1];
	String includePage = "../" + folderName + "/" + fileName + ".jsp";
	//System.out.println("--> " + folderName + " / " + fileName + " / " + includePage + "<br>");
	
	
	String imgDisplayPath = "";
	imgDisplayPath += request.getContextPath();
	imgDisplayPath += "/attach";
	imgDisplayPath += request.getContextPath();
		

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write("\r\n");
      out.write("\r\n");

	String tbl = request.getParameter("tbl");
	if(tbl == null || tbl.trim().equals("")) {
		tbl = "freeboard";
	}
	
	String imsiBoardTitle = "";
	if(tbl.equals("freeboard")) {
		imsiBoardTitle = "자유게시판";
	} else if(tbl.equals("onebyone")) {
		imsiBoardTitle = "1:1게시판";
	} else if(tbl.equals("qna")) {
		imsiBoardTitle = "Q&A 게시판";
	} else {
		out.println("<script>");
		out.println("alert('없는 게시판입니다.\\Home으로 이동합니다.');");
		out.println("location.href='main.jsp?menuGubun=dashBoard_list';");
		out.println("</script>");
	}

	String pageNum_ = request.getParameter("pageNum");
	if(pageNum_ == null || pageNum_.trim().equals("")) {
		pageNum_ = "1";
	}
	int pageNum = Integer.parseInt(pageNum_);

	String no_ = request.getParameter("no");
	
	if(no_ == null || no_.trim().equals("")) {
		no_ = "0";
	}
	
	int no = Integer.parseInt(no_);

	String searchField = request.getParameter("searchField");
	String searchWord = request.getParameter("searchWord");
	
	// 하나라도 비어있으면 검색X
	int imsiSearchCounter = 0;
	if(searchField == null || searchField.trim().equals("")) {
		searchField = "";
		imsiSearchCounter++;
	}
	if(searchWord == null || searchWord.trim().equals("")) {
		searchWord = "";
		imsiSearchCounter++;
	}
	if(imsiSearchCounter > 0) {
		searchField = "";
		searchWord = "";
	}

      out.write("\r\n");
      out.write("\r\n");

	String dbNoticeNo_ = request.getParameter("dbNoticeNo");
	int dbNoticeNo = Integer.parseInt(dbNoticeNo_);
	
	String email = request.getParameter("email");
	String passwd = request.getParameter("passwd");
	String subject = request.getParameter("subject");
	String content = request.getParameter("content");
	String noticeGubun = request.getParameter("noticeGubun");
	String secretGubun = request.getParameter("secretGubun");
	tbl = request.getParameter("tbl");
	
	int memberNo = sessionNo;
	String attachInfo = "-";
	
	SubBoardDAO subBoardDao = new SubBoardDAO();
	
	int noticeNo = 0;
	if(noticeGubun.equals("T")) {
		if(dbNoticeNo > 0) {
			noticeNo = dbNoticeNo;
		} else {
			noticeNo = subBoardDao.getMaxNumRefNoticeNo("noticeNo") + 1;
		}
	}
	
	SubBoardDTO arguDto = new SubBoardDTO();
	arguDto.setNo(no);
	arguDto.setTbl(tbl);
	arguDto.setEmail(email);
	arguDto.setPasswd(passwd);
	arguDto.setSubject(subject);
	arguDto.setContent(content);
	arguDto.setMemberNo(memberNo);
	arguDto.setNoticeNo(noticeNo);
	arguDto.setSecretGubun(secretGubun);
	arguDto.setAttachInfo(attachInfo);
	
	SubBoardDTO returnDto = subBoardDao.getSelectOne(arguDto);
	if(!returnDto.getPasswd().equals(passwd)) {
		String imsiUrl = "";
		imsiUrl += "main.jsp?menuGubun=subBoard_update";
		imsiUrl += "&tbl=" + tbl;
		imsiUrl += "&no=" + no;
		imsiUrl += "&searchField=" + searchField;
		imsiUrl += "&searchWord=" + searchWord;
		out.println("<script>");
		out.println("alert('입력한 비밀번호가 다릅니다. \\n확인 후 다시 이용바랍니다.');");
		out.println("location.href='" + imsiUrl + "';");
		out.println("</script>");
		return;
	}
	
	int result = subBoardDao.setUpdate(arguDto);
	
	if(result > 0) {
		out.println("<script>location.href='main.jsp?menuGubun=subBoard_view&tbl=" + tbl + "&no=" + no + "&searchField=" + searchField + "&searchWord=" + searchWord + "';</script>");
	} else {
		out.println("<script>");
		out.println("alert('수정 실패..');");
		out.println("location.href='main.jsp?menuGubun=subBoard_update&tbl=" + tbl + "&no=" + no + "&searchField=" + searchField + "&searchWord=" + searchWord + "';");
		out.println("</script>");
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

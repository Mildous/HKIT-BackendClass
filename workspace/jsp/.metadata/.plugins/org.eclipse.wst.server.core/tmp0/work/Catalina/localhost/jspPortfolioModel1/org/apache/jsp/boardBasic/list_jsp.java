/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-08 06:01:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boardBasic;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import boardBasic.model.dto.BoardBasicDTO;
import boardBasic.model.dao.BoardBasicDAO;
import config.Util;
import java.util.ArrayList;
import config.JSFunction;
import java.net.Inet4Address;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/boardBasic/_inc_top.jsp", Long.valueOf(1661484621841L));
    _jspx_dependants.put("/boardBasic/../_include/inc_header.jsp", Long.valueOf(1662616070258L));
    _jspx_dependants.put("/boardBasic/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("boardBasic.model.dao.BoardBasicDAO");
    _jspx_imports_classes.add("config.Util");
    _jspx_imports_classes.add("config.JSFunction");
    _jspx_imports_classes.add("boardBasic.model.dto.BoardBasicDTO");
    _jspx_imports_classes.add("java.net.Inet4Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String referer = request.getHeader("REFERER");
	String url = request.getRequestURL().toString();
	String uri = request.getRequestURI().toString();
	String path = request.getContextPath();
	String ip = Inet4Address.getLocalHost().getHostAddress();	// import java.net.Inet4Address;
/*	
	out.println("referer : " + referer + "<br>");
	out.println("url : " + url + "<br>");
	out.println("uri : " + uri + "<br>");
	out.println("ip : " + ip + "<br>");
*/	

	String menuGubun = request.getParameter("menuGubun");

	if(menuGubun == null || menuGubun.trim().equals("")) {
		menuGubun = "member_list";

/*		out.println("<script>");
		out.println("location.href='error.jsp?errorCode=001';");
		out.println("</script>");
		return;
*/

	}
	
	String[] imsiMenuGubunArray = menuGubun.split("_");
	String folderName = imsiMenuGubunArray[0];
	String fileName = imsiMenuGubunArray[1];
	String includePage = "../" + folderName + "/" + fileName + ".jsp";
	//System.out.println("--> " + folderName + " / " + fileName + " / " + includePage + "<br>");
	
	
	String imgDisplayPath = "";
	imgDisplayPath += request.getContextPath();
	imgDisplayPath += "/attach";
	imgDisplayPath += request.getContextPath();
		

      out.write("\r\n");
      out.write("\r\n");

/*
	String sessionChk = "O";
	if(fileName.equals("list")){
	   sessionChk="X";
	}
	
	if (sessionChk.equals("O") && sessionNo <= 0) {
		out.println("<script>");
		out.println("alert('로그인 후 이용바랍니다.');");
		out.println("location.href='" + request.getContextPath() + "';");
		//out.println("location.href='../main/main.jsp?menuGubun=noLogin_login';");
		out.println("</script>");
		return;
	}
*/
if (sessionNo <= 0) {
	JSFunction.alertLocation("로그인 후 이용바랍니다.", "main.jsp?menuGubun=dashBoard_list", out);
}


      out.write("\r\n");
      out.write("    ");
      out.write('\r');
      out.write('\n');

	String searchGubun = request.getParameter("searchGubun");
	String searchData = request.getParameter("searchData");
	
	Util util = new Util();
	
	searchGubun = util.getNullBlankCheck(searchGubun, "");
	searchData = util.getNullBlankCheck(searchData, "");
	
	if(searchGubun.equals("") || searchData.equals("")) {
		searchGubun = "";
		searchData = "";
	}

	BoardBasicDAO dao = new BoardBasicDAO();
	ArrayList<BoardBasicDTO> list = dao.getSelectAll(searchGubun, searchData);
	
	int totalCount = list.size();
	
	String second = "&nbsp;&nbsp;&nbsp;&nbsp;[re]";
	String thrid = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[re]";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>게시글목록</h2>\r\n");
      out.write("<div style=\"border: 0px solid red; padding: 0px 0px; width: 80%;\" align=\"left\">\r\n");
	if(searchGubun.equals("") || searchData.equals("")) { 
      out.write("\r\n");
      out.write("		*전체목록 (");
      out.print( list.size() );
      out.write("건)\r\n");
	} else { 
      out.write("\r\n");
      out.write("		*검색어 \"");
      out.print( searchData );
      out.write("\"으/로 검색된 목록 (");
      out.print( list.size() );
      out.write("건)\r\n");
	} 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<table border=\"1\" width=\"80%\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th width=\"50px\">순번</th>\r\n");
      out.write("		<th>제목</th>\r\n");
      out.write("		<th>작성자</th>\r\n");
      out.write("		<th width=\"100px\">작성일</th>\r\n");
      out.write("		<th width=\"50px\">조회수</th>\r\n");
      out.write("		<th width=\"50px\">parentNo</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");
 if(totalCount == 0) { 
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"6\" height=\"200px\" align=\"center\">등록된 게시글이 없습니다..</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");
 } 
      out.write('\r');
      out.write('\n');
      out.write('	');

		int num = totalCount;
		for(int i=0; i<list.size(); i++) {
			BoardBasicDTO dto = list.get(i);
	
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\">");
      out.print( num );
      out.write("</td>\r\n");
      out.write("	");
	if(dto.getStepNo() == 2) { 
      out.write("\r\n");
      out.write("			<td>");
      out.print( second );
      out.write("<a href=\"#\" onClick=\"move('boardBasic_view', '");
      out.print( dto.getNo() );
      out.write("');\" style=\"padding-left: 5px;\">");
      out.print( dto.getSubject() );
      out.write("</a></td>\r\n");
      out.write("	");
	} else if(dto.getStepNo() == 3) { 
      out.write("\r\n");
      out.write("			<td>");
      out.print( thrid );
      out.write("<a href=\"#\" onClick=\"move('boardBasic_view', '");
      out.print( dto.getNo() );
      out.write("');\" style=\"padding-left: 5px;\">");
      out.print( dto.getSubject() );
      out.write("</a></td>\r\n");
      out.write("	");
	} else { 
      out.write("\r\n");
      out.write("			<td><a href=\"#\" onClick=\"move('boardBasic_view', '");
      out.print( dto.getNo() );
      out.write("');\" style=\"padding-left: 5px;\">");
      out.print( dto.getSubject() );
      out.write("</a></td>\r\n");
      out.write("	");
	} 
      out.write("\r\n");
      out.write("			<td align=\"center\">");
      out.print( dto.getWriter() );
      out.write("</td>\r\n");
      out.write("			<td align=\"center\">");
      out.print( dto.getRegiDate() );
      out.write("</td>\r\n");
      out.write("			<td align=\"center\">");
      out.print( dto.getHit() );
      out.write("</td>\r\n");
      out.write("			<td align=\"center\">");
      out.print( dto.getParentNo() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	");

		num--;
	}
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"6\" align=\"center\" style=\"padding: 20px 0px;\">\r\n");
      out.write("			<form name=\"searchForm\">\r\n");
      out.write("			<select name=\"searchGubun\">\r\n");
      out.write("				<option value=\"\" ");
 if(searchGubun.equals("")) { out.println("selected"); } 
      out.write(">-- 선택 --</option>\r\n");
      out.write("				<option value=\"subject\" ");
 if(searchGubun.equals("subject")) { out.println("selected"); } 
      out.write(">제목</option>\r\n");
      out.write("				<option value=\"writer\" ");
 if(searchGubun.equals("writer")) { out.println("selected"); } 
      out.write(">작성자</option>\r\n");
      out.write("				<option value=\"content\" ");
 if(searchGubun.equals("content")) { out.println("selected"); } 
      out.write(">내용</option>\r\n");
      out.write("				<option value=\"email\" ");
 if(searchGubun.equals("email")) { out.println("selected"); } 
      out.write(">이메일</option>\r\n");
      out.write("				<option value=\"all\" ");
 if(searchGubun.equals("all")) { out.println("selected"); } 
      out.write(">ALL</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			&nbsp;\r\n");
      out.write("			<input type=\"text\" name=\"searchData\" value=\"");
      out.print( searchData );
      out.write("\">\r\n");
      out.write("			&nbsp;\r\n");
      out.write("			<button type=\"button\" onClick=\"search();\">검색하기</button>\r\n");
      out.write("			</form>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 20px; width: 80%; \" align=\"right\">\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('boardBasic_list', '');\">목록</a>\r\n");
      out.write("	|\r\n");
      out.write("	<a href=\"#\" onClick=\"move('boardBasic_insert', '');\">등록</a>\r\n");
      out.write("	|\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function move(value1, value2) {\r\n");
      out.write("	location.href='main.jsp?menuGubun=' + value1 + '&no=' + value2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function search() {\r\n");
      out.write("	document.searchForm.action = \"mainProc.jsp?menuGubun=boardBasic_listSearch\";\r\n");
      out.write("	document.searchForm.method = \"post\";\r\n");
      out.write("	document.searchForm.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-30 03:22:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.dashBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/dashBoard/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Alumni+Sans+Pinstripe&family=Boogaloo&display=swap');\r\n");
      out.write("#login_table {\r\n");
      out.write("	border: none;\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	padding: 0px 20px 20px 0px;\r\n");
      out.write("}\r\n");
      out.write("#login_img {\r\n");
      out.write("	width: 20px;\r\n");
      out.write("	height: 20px;\r\n");
      out.write("}\r\n");
      out.write("#login_input {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 20px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-bottom: solid 2px black;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("#login_btn {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	background: white;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login_title	{\r\n");
      out.write("	font-size: 2em;\r\n");
      out.write("	font-family: 'Boogaloo', cursive;\r\n");
      out.write("	width: 20%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#main_title	{\r\n");
      out.write("	font-size: 2em;\r\n");
      out.write("	font-family: 'Boogaloo', cursive;\r\n");
      out.write("	width: 20%;\r\n");
      out.write("}\r\n");
      out.write("#main_img {\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function validateForm(form) {\r\n");
      out.write("	if(form.user_id.value == null || form.user_id.value == \"\") {\r\n");
      out.write("		alert(\"아이디를 입력하세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(!form.user_pw.value) {\r\n");
      out.write("		alert(\"비밀번호를 입력하세요\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
 if(sessionNo == 0) { 
      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("<h2 id=\"login_title\">Login</h2>\r\n");
      out.write("<form name=\"loginForm\" method=\"post\" action=\"mainProc.jsp?menuGubun=noLogin_loginProc\" onsubmit=\"return validateForm(this);\">\r\n");
      out.write("<table id=\"login_table\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\">\r\n");
      out.write("			<img src=\"../img/user.png\" id=\"login_img\">&nbsp;\r\n");
      out.write("			<input type=\"text\" id=\"login_input\" name=\"user_id\" placeholder=\"enter your ID..\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\">\r\n");
      out.write("			<img src=\"../img/lock.png\" id=\"login_img\">&nbsp;\r\n");
      out.write("			<input type=\"password\" id=\"login_input\" name=\"user_pw\" placeholder=\"enter your Password..\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr height=\"50px\">\r\n");
      out.write("		<td align=\"center\">\r\n");
      out.write("			<button type=\"submit\" id=\"login_btn\">Login</button>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("<br><br>\r\n");
      out.write("		\r\n");
      out.write("<script>\r\n");
      out.write("function login() {\r\n");
      out.write("	if(confirm('로그인 하시겠습니까?')) {\r\n");
      out.write("		document.loginForm.action = 'mainProc.jsp?menuGubun=noLogin_loginProc';\r\n");
      out.write("		document.loginForm.method = 'post';\r\n");
      out.write("		document.loginForm.submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
 } else { 
      out.write("\r\n");
      out.write("<div >\r\n");
      out.write("	<h2 id=\"main_title\">Hello world!</h2>\r\n");
      out.write("	<img src=\"../img/251.png\" id=\"main_img\">\r\n");
      out.write("</div>\r\n");
 } 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

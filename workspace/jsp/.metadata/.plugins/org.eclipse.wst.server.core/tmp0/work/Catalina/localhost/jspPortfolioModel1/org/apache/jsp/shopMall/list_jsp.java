/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-05 05:55:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shopMall;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import shopMall.model.dao.CartDAO;
import shopMall.model.dto.CartDTO;
import product.model.dao.ProductDAO;
import product.model.dto.ProductDTO;
import java.net.Inet4Address;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/shopMall/../_include/inc_header.jsp", Long.valueOf(1662350101525L));
    _jspx_dependants.put("/shopMall/_inc_top.jsp", Long.valueOf(1662347775069L));
    _jspx_dependants.put("/shopMall/../_include/inc_sessionChk.jsp", Long.valueOf(1661482669264L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("product.model.dao.ProductDAO");
    _jspx_imports_classes.add("shopMall.model.dao.CartDAO");
    _jspx_imports_classes.add("shopMall.model.dto.CartDTO");
    _jspx_imports_classes.add("product.model.dto.ProductDTO");
    _jspx_imports_classes.add("java.net.Inet4Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String referer = request.getHeader("REFERER");
	String url = request.getRequestURL().toString();
	String uri = request.getRequestURI().toString();
	String path = request.getContextPath();
	String ip = Inet4Address.getLocalHost().getHostAddress();	// import java.net.Inet4Address;
/*	
	out.println("referer : " + referer + "<br>");
	out.println("url : " + url + "<br>");
	out.println("uri : " + uri + "<br>");
	out.println("ip : " + ip + "<br>");
*/	

	String menuGubun = request.getParameter("menuGubun");

	if(menuGubun == null || menuGubun.trim().equals("")) {
		menuGubun = "member_list";

/*		out.println("<script>");
		out.println("location.href='error.jsp?errorCode=001';");
		out.println("</script>");
*/
		return;
	}
	
	String[] imsiMenuGubunArray = menuGubun.split("_");
	String folderName = imsiMenuGubunArray[0];
	String fileName = imsiMenuGubunArray[1];
	String includePage = "../" + folderName + "/" + fileName + ".jsp";
	//System.out.println("--> " + folderName + " / " + fileName + " / " + includePage + "<br>");
	
	
	String imgDisplayPath = "";
	imgDisplayPath += request.getContextPath();
	imgDisplayPath += "/attach";
	imgDisplayPath += request.getContextPath();
		

      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	int sessionNo = 0;
	String sessionId = "";
	String sessionName = "";
	String sessionGrade = "";
	String sessionEmail = "";
	
	if(session.getAttribute("sessionNo") != null) {
		sessionNo = (Integer) session.getAttribute("sessionNo");
		sessionId = (String) session.getAttribute("sessionId");
		sessionName = (String) session.getAttribute("sessionName");
		sessionGrade = (String) session.getAttribute("sessionGrade");
		sessionEmail = (String) session.getAttribute("sessionEmail");
	}
	

      out.write('\n');
      out.write('\n');

	String searchField = "";
	String searchWord = "";
	int startPage = 1;
	int lastPage = 10;
	ProductDAO productDao = new ProductDAO();
	ArrayList<ProductDTO> list = productDao.getSelectAll(searchField, searchWord, startPage, lastPage);

	int productCounter = list.size();
	int cellCounter = 3; //가로로 배열할 상품의 갯수
	
	int imsiMok = productCounter / cellCounter;
	int imsiNa = productCounter % cellCounter;
	
	int rowCounter = 0;
	if (imsiNa > 0) {
		rowCounter = imsiMok + 1;
	} else {
		rowCounter = imsiMok;
	}

      out.write("\n");
      out.write("\n");
      out.write("<h2>쇼핑몰 목록</h2>\n");
      out.write("\n");
      out.write("<table border=\"0\">\n");
      out.write("\n");
 
	int idx = 0;
	for (int i=0; i<rowCounter; i++) {

      out.write("\n");
      out.write("		<tr>\n");
      out.write("			");

				for (int j=0; j<cellCounter; j++) {
 					String idxExist = "X"; //상품이 없을 경우..
					if (idx < productCounter) {
						idxExist = "O"; //상품이 있을 경우..
					}
 					
 					int imsiCode = 0;
 					String imsiName = "";
 					int imsiPrice = 0;
 					String imsiImg = "";
 					
 					if (idxExist.equals("O")) {
 						ProductDTO dto = list.get(idx);
					
 	 					imsiCode = dto.getProductCode();
 	 					imsiName = dto.getProductName();
 	 					imsiPrice = dto.getProductPrice();
 	 					imsiImg = "";
 	 					
 	 					if(dto.getAttachInfo() == null || dto.getAttachInfo().equals("-")) {
 	 						out.println("<img src='../img/image_not_supported.png'>");
 	 					} else {
 	 						String[] imsiArray = dto.getAttachInfo().split(",");
 	 						for(int k=0; k<imsiArray.length; k++) {
 	 							String[] imsiArray2 = imsiArray[k].split("[|]");
 	 								
 	 							String imsiImgPath = "";
 	 							imsiImgPath += request.getContextPath();
 	 							imsiImgPath += "/attach";
 	 							imsiImgPath += request.getContextPath();
 	 							imsiImgPath += "/product/";
 	 							imsiImgPath += imsiArray2[1];
 	 							
 	 							imsiImg = "<img src='" + imsiImgPath + "' width='200px'>";
 	 						}
 	 					}
 					}
			
      out.write("\n");
      out.write("					<td style=\"padding: 20px 20px;\">\n");
      out.write("\n");
      out.write(" 						");
 if (idxExist.equals("O")) { 
      out.write("\n");
      out.write("							<table border=\"0\" style=\"width: 200px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td height=\"100\">\n");
      out.write("										<a href=\"#\" onClick=\"move('shopMall_view', '");
      out.print( imsiCode );
      out.write("');\">");
      out.print( imsiImg );
      out.write("</a>\n");
      out.write("									</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>");
      out.print(imsiName );
      out.write(' ');
      out.write('(');
      out.print(imsiCode );
      out.write(")</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>");
      out.print(imsiPrice );
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("						");
 } else { 
      out.write("\n");
      out.write("							&nbsp;\n");
      out.write("						");
 } 
      out.write("\n");
      out.write("						\n");
      out.write("					</td>\n");
      out.write("			");

					idx++;
				}
			
      out.write("\n");
      out.write("\n");
      out.write("		</tr>\n");

	}

      out.write("\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function move(value1, value2) {\n");
      out.write("	location.href = 'main.jsp?menuGubun=' + value1 + '&productCode=' + value2;\n");
      out.write("}\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

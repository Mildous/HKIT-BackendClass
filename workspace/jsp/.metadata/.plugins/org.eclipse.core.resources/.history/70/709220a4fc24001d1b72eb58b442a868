package board.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import board.model.dto.BoardDTO;
import config.DB;

public class BoardDAO {
	
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	public ArrayList<BoardDTO> getSelectAll() {
		ArrayList<BoardDTO> list = new ArrayList<>();
		conn = DB.dbConn();
		try {
			String query = "";
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
			
		}
		return list;
	}
	
	public BoardDTO getSelectOne(BoardDTO param) {
		BoardDTO dto = new BoardDTO();
		conn = DB.dbConn();
		try {
			String query = "";
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
			
		}
		return dto;
	}
	no number not null,
	num number not null,
	tbl varchar2(50) not null,
	writer varchar2(50) not null,
	subject varchar2(50) not null,
	content clob not null,
	email varchar2(50) not null,
	passwd varchar2(50) not null,
	refNo number not null,
	stepNo number not null,
	levelNo number not null,
	parentNo number not null,
	hit number not null,
	ip varchar2(50) not null,
	memberNo number not null,
	noticeNo number not null,
	secretGubun varchar2(1) not null check (secretGubun in ('T', 'F')),
	regiDate date not null,
	attachInfo clob not null,
	public int setInsert(BoardDTO param) {
		int result = 0;
		conn = DB.dbConn();
		try {
			String query = "insert into board values ()";
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
			
		}
		return result;
	}
	
	public int setUpdate(BoardDTO param) {
		int result = 0;
		conn = DB.dbConn();
		try {
			String query = "";
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
			
		}
		return result;
	}
	
	public int setDelete(BoardDTO param) {
		int result = 0;
		conn = DB.dbConn();
		try {
			String query = "";
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
			
		}
		return result;
	}

}

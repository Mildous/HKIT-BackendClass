package member.model;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import common.DB;

public class MemberDAO {
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	public void getSelectAll() {
		
		try {
			conn = DB.dbConn();
			//-------------------------------------------------
			String sql = "select memberNo, memberId, memberName, regiDate from member";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int memberNo = rs.getInt("memberNo");
				String memberId = rs.getString("memberId");
				String memberName = rs.getString("memberName");
				//String memberJumin = rs.getString("memberJumin");
				//String memberPhone = rs.getString("memberPhone");
				//String memberEmail = rs.getString("memberEmail");
				//String memberAddr = rs.getString("memberAddr");
				Date regiDate = rs.getDate("regiDate");
				
				String imsi = "";
				imsi += memberNo + " / ";
				imsi += memberId + " / ";
				imsi += memberName + " / ";
				//imsi += memberJumin + " / " + memberPhone + " / " + memberEmail + " / " + memberAddr + " / ";
				imsi += regiDate;
				
				System.out.println(imsi);
			}
			//-------------------------------------------------
		} catch(Exception e) {
			System.out.println("-- DB 접속 실패 --");
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
		}

	}
	
public void getSelectOne() {
		
		try {
			conn = DB.dbConn();
			//-------------------------------------------------
			String sql = "select memberNo, memberId, memberName, regiDate from member";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int memberNo = rs.getInt("memberNo");
				String memberId = rs.getString("memberId");
				String memberName = rs.getString("memberName");
				//String memberJumin = rs.getString("memberJumin");
				//String memberPhone = rs.getString("memberPhone");
				//String memberEmail = rs.getString("memberEmail");
				//String memberAddr = rs.getString("memberAddr");
				Date regiDate = rs.getDate("regiDate");
				
				String imsi = "";
				imsi += memberNo + " / ";
				imsi += memberId + " / ";
				imsi += memberName + " / ";
				//imsi += memberJumin + " / " + memberPhone + " / " + memberEmail + " / " + memberAddr + " / ";
				imsi += regiDate;
				
				System.out.println(imsi);
			}
			//-------------------------------------------------
		} catch(Exception e) {
			System.out.println("-- DB 접속 실패 --");
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
		}

	}

	public int setInsert(MemberDTO dto) {
		
		int result = 0;
		
		try {
			conn = DB.dbConn();
			//------------------------------------------
			String sql = "insert into member values (seq_member.nextval, ?, ?, ?, ?, ?, ?, ?, sysdate)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getMemberId());
			pstmt.setString(2, dto.getMemberPw());
			pstmt.setString(3, dto.getMemberName());
			pstmt.setString(4, dto.getMemberJumin());
			pstmt.setString(5, dto.getMemberPhone());
			pstmt.setString(6, dto.getMemberEmail());
			pstmt.setString(7, dto.getMemberAddr());
			result = pstmt.executeUpdate();
			//------------------------------------------
		} catch(Exception e) {
			//e.printStackTrace();
			System.out.println("-- DB 접속 실패 --");
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
		}
		return result;
		
	}
	
	public int setUpdate(MemberDTO dto) {
		int result = 0;
		try {
			conn = DB.dbConn();
			//------------------------------------------
			String sql = "update member set memberId = ?, memberName = ? where memberNo = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getMemberId());	//DB의 인덱스는 1부터 시작
			pstmt.setString(2, dto.getMemberName());
			pstmt.setInt(3, dto.getMemberNo());
			result = pstmt.executeUpdate();
			//------------------------------------------
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
		}
		return result;
	}
	
	public int setDelete(MemberDTO dto) {
		int result = 0;
		try {
			conn = DB.dbConn();
			//------------------------------------------
			String sql = "delete from member where memberNo = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1,  dto.getMemberNo());
			result = pstmt.executeUpdate();
			//------------------------------------------
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DB.dbConnClose(rs, pstmt, conn);
		}
		return result;
	}
	
	
}

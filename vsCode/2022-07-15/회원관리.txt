1. DB 설계

Entity : 회원	(member)
회원번호    memberNo    number
아이디      memberId    varchar2(50)
비밀번호    memberPw    varchar2(50)
이름        memberName  varchar2(50)
주민번호    memberJumin varchar2(50)
전화번호    memberPhone varchar2(50)
이메일      memberEmail varchar2(50)
주소        memberAddr  varchar2(50)
등록일      regiDate    date


create table member (
memberNo	number          not null,
memberId	varchar2(50)    not null,
memberPw	varchar2(50)    not null,
memberName	varchar2(50)    not null,
memberJumin	varchar2(50)    not null,
memberPhone	varchar2(50)    not null,
memberEmail	varchar2(50)    not null,
memberAddr	varchar2(50)    not null,
regiDate	date            not null,
unique (memberNo),
primary key (memberId),
unique (memberJumin)
);

[제약조건]
primary key : 중복 허용안함, null값 허용 안함 
unique      : 중복 허용안함, null값 허용함
foreign key : PK <-> FK
not null    : null값 허용 안함 
check       : ex) 성별 '여자', '남자'만 받기
default     : 기본값


[회원번호 자동 등록]

서브쿼리..
- memberNo의 최대값 구하기..
    select max(memberNo) from member;

- memberNo의 최대값과 최소값 구하기..
    select max(memberNo), min(memberNo) from member;

- 1씩 증가시키기..
    insert into member values(
        (select nvl(max(memberNo),0) + 1 from member),
        'jang', 
        '1234', 
        '장천용', 
        '3333334444444', 
        '01099887766', 
        'jang@gmail.com', 
        '경기', 
        sysdate
        );


시퀀스..
 - create sequence seq_member start with 1 increment by 1 nomaxvalue nocache;
 
 select seq_member.currval from dual;   : 현재 시퀀스 조회
 select seq_member.nextval from dual;   : 다음 시퀀스 조회

 insert into member values(
    seq_member.nextval, 
    'hong', 
    '1234', 
    '홍길동', 
    '1111112222222', 
    '01012345678', 
    'hong@gmail.com', 
    '대구', 
    sysdate
    );


* 성적 처리

이름 국어 영어 수학 총점 평균 등급

create table sungjuk (
no number not null,
name varchar2(50) not null,
kor number not null,
eng number not null,
math number not null,
tot number not null,
avg number not null,
grade varchar2(50) not null,
regiDate date not null,
primary key (no)
);

create sequence seq_sungjuk start with 1 increment by 1 nomaxvalue nocache;

//-------------------------------------------------------------------
public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Name ?  ");
		String name = sc.nextLine();
		System.out.print("Kor ?  ");
		int kor = Integer.parseInt(sc.nextLine());
		System.out.print("Eng ?  ");
		int eng = Integer.parseInt(sc.nextLine());
		System.out.print("Math ?  ");
		int math = Integer.parseInt(sc.nextLine());
		
		int tot = kor + eng + math;
		double avg = tot / 3.0;
		
		String grade = "E";
		if (avg >= 90) {
			grade = "A";
		} else if (avg >= 80) {
			grade = "B";
		} else if (avg >= 70) {
			grade = "C";
		} else if (avg >= 60) {
			grade = "D";
		}
		
		String[] array = new String[7];
		array[0] = name;
		array[1] = kor + "";
		array[2] = eng + "";
		array[3] = math + "";
		array[4] = tot + "";
		array[5] = avg + "";
		array[6] = grade;
		
		SungjukDTO dto = new SungjukDTO();
		dto.setName(name);
		dto.setKor(kor);
		dto.setEng(eng);
		dto.setMath(math);
		dto.setTot(tot);
		dto.setAvg(avg);
		dto.setGrade(grade);
		
		SungjukDAO dao = new SungjukDAO();
		//dao.setInsert01(name, kor, eng, math, tot, avg, grade);
		//dao.setInsert02(imsi);
		//dao.setInsert03(array);
		dao.setInsert04(dto);
		
	}
    //-----------------------------------------------------------------

	public void setInsert01(String name, int kor, int eng, int math, int tot, double avg, String grade) {
		System.out.println("name : " + name);
		System.out.println("kor : " + kor);
		System.out.println("eng : " + eng);
		System.out.println("math : " + math);
		System.out.println("tot : " + tot);
		System.out.println("avg : " + eng);
		System.out.println("grade : " + grade);
	}
	
	public void setInsert02(String str) {
		//홍길동|90|80|70|240|80.0|B
		String[] imsiArray = str.split("[|]");
		
		System.out.println("name : " + imsiArray[0]);
		System.out.println("kor : " + imsiArray[1]);
		System.out.println("eng : " + imsiArray[2]);
		System.out.println("math : " + imsiArray[3]);
		System.out.println("tot : " + imsiArray[4]);
		System.out.println("avg : " + imsiArray[5]);
		System.out.println("grade : " + imsiArray[6]);
	}
	
	public void setInsert03(String[] sungjukArray) {
		System.out.println("name : " + sungjukArray[0]);
		System.out.println("kor : " + sungjukArray[1]);
		System.out.println("eng : " + sungjukArray[2]);
		System.out.println("math : " + sungjukArray[3]);
		System.out.println("tot : " + sungjukArray[4]);
		System.out.println("avg : " + sungjukArray[5]);
		System.out.println("grade : " + sungjukArray[6]);
	}

	public void setInsert04(SungjukDTO dto) {
		System.out.println("name : " + dto.getName());
		System.out.println("kor : " + dto.getKor());
		System.out.println("eng : " + dto.getEng());
		System.out.println("math : " + dto.getMath());
		System.out.println("tot : " + dto.getTot());
		System.out.println("avg : " + dto.getAvg());
		System.out.println("grade : " + dto.getGrade());
	}